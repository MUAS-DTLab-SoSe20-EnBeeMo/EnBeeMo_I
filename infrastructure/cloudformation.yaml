AWSTemplateFormatVersion: 2010-09-09
Parameters:
  MaxCPUs:
    Description: The maximum number of Amazon EC2 vCPUs that an environment can reach.
    Default: 0
    Type: Number
Resources:
  ### ### ### ### ### ### ### ### ###
  ### NETWORKING
  ### ### ### ### ### ### ### ### ###
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      InstanceTenancy: default
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-central-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-central-1b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  RouteInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet1
      RouteTableId:
        Ref: RouteTable
  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet2
      RouteTableId:
        Ref: RouteTable
  SecurityGroupComputeWorker:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: compute worker
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId: !Ref VPC
  SecurityGroupComputeWorkerIngressDebug:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: '22'
      CidrIp: 0.0.0.0/0
      GroupId: !Ref SecurityGroupComputeWorker
      IpProtocol: tcp
      ToPort: '22'
  ### ### ### ### ### ### ### ### ###
  ### BATCH ENVIRONMENT
  ### ### ### ### ### ### ### ### ###
  ComputeEnvrionment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeResources:
        InstanceRole: !Ref WorkerInstanceProfile
        InstanceTypes:
          - p2.xlarge
        MaxvCpus: !Ref MaxCPUs
        MinvCpus: 0
        SecurityGroupIds:
          - !Ref SecurityGroupComputeWorker
        Subnets:
          - !Ref Subnet1
          - !Ref Subnet2
        Type: EC2
      ServiceRole: !Ref ComputeEnvironmentRole
      State: 'ENABLED'
      Type: MANAGED
  WorkerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref WorkerRole
  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref ComputeEnvrionment
          Order: 0
      Priority: 1
      State: 'ENABLED'
  ### ### ### ### ### ### ### ### ###
  ### STORAGE
  ### ### ### ### ### ### ### ### ###
  JobBucket:
    Type: AWS::S3::Bucket
  ### ### ### ### ### ### ### ### ###
  ### Docker Repository
  ### ### ### ### ### ### ### ### ###
  DockerRepository:
    Type: AWS::ECR::Repository
  ### ### ### ### ### ### ### ### ###
  ### PERMISSIONS
  ### ### ### ### ### ### ### ### ###
  ComputeEnvironmentRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - batch.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  WorkerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  WorkerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'Worker'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:Head*
              - s3:PutObject
              - s3:DeleteObject
              - s3:AbortMultipartUpload
            Resource:
              - !Join
                - '/'
                - - !GetAtt JobBucket.Arn
                  - '*'
              - !GetAtt JobBucket.Arn
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
            Resource: "*"
      Roles:
        - !Ref WorkerRole
  BatchJobCreatorPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'BatchJobCreator'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Allow to submit jobs to the specific queue
          - Effect: Allow
            Action:
              - batch:SubmitJob
            Resource:
              - !Ref JobQueue
              - "arn:aws:batch:*:*:job-definition/*"
          # Allow managing jobs and job definitions
          - Effect: Allow
            Action:
              - batch:DeregisterJobDefinition
              - batch:RegisterJobDefinition
              - batch:DescribeJobQueues
              - batch:ListJobs
              - batch:DescribeComputeEnvironments
              - batch:TerminateJob
              - batch:DescribeJobs
              - batch:DescribeJobDefinitions
            Resource: "*"
          # Allow to prepare input data for the job
          # Allow to read the output data
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:Head*
              - s3:PutObject
            Resource:
              - !Join
                - '/'
                - - !GetAtt JobBucket.Arn
                  - '*'
              - !GetAtt JobBucket.Arn
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
            Resource: "*"
      Groups:
        - !Ref ScientistGroup
  ScientistGroup:
    Type: AWS::IAM::Group
  ScientistPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'Scientist'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # allow read+write on input and output bucket
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
              - s3:Head*
              - s3:PutObject
              - s3:DeleteObject
              - s3:DeleteObjectVersion
              - s3:RestoreObject
              - s3:AbortMultipartUpload
            Resource:
              - !Join
                - '/'
                - - !GetAtt JobBucket.Arn
                  - '*'
              - !GetAtt JobBucket.Arn
              - !Join
                - '/'
                - - !GetAtt JobBucket.Arn
                  - '*'
              - !GetAtt JobBucket.Arn
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
            Resource: "*"
          # allow full access to the docker repository
          - Effect: Allow
            Action:
              - "ecr:*"
            Resource:
              - !GetAtt DockerRepository.Arn
              - !Join
                - "/"
                - - !GetAtt DockerRepository.Arn
                  - "*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:DescribeRepositories
            Resource: "*"
      Groups:
        - !Ref ScientistGroup
Outputs:
  JobBucket:
    Description: Name of the S3 bucket for in- and output data.
    Value: !Ref JobBucket
  DockerRepository:
    Description: Name of the Docker Repository
    Value: !Ref DockerRepository
  ComputeEnvironment:
    Description: ARN of the compute environment.
    Value: !Ref ComputeEnvrionment
  JobQueue:
    Description: ARN of the job queue.
    Value: !Ref JobQueue
  ScientistUserGroup:
    Description: Name of the scientist group. Add users to this group manually.
    Value: !Ref ScientistGroup
